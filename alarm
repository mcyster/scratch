#!/usr/bin/env python
"""
Example for Adafruit USB tower light w/alarm
don't forge to  or .gitignore
"""

import serial
import time
from enum import Enum
from flask import Flask, request

serialPort = 'COM57'  # Change to the serial/COM port of the tower light
#serialPort = '/dev/USBserial0'  # on mac/linux, it will be a /dev path
baudRate = 9600

RED_ON = 0x11
RED_OFF = 0x21
RED_BLINK = 0x41

YELLOW_ON= 0x12
YELLOW_OFF = 0x22
YELLOW_BLINK = 0x42

GREEN_ON = 0x14
GREEN_OFF = 0x24
GREEN_BLINK = 0x44

BUZZER_ON = 0x18
BUZZER_OFF = 0x28
BUZZER_BLINK = 0x48

class AlarmOperation(Enum):
  ON = 0x10
  OFF = 0x20
  BLINK = 0x40

class AlarmMode(Enum):
  RED = 0x01
  YELLOW = 0x02
  GREEN = 0x04
  BUZZER = 0x08

class Alarm:
  def __init__(self, serial = None, baudRate = 9600): 
    self._serial = serial

  def sendCommand(self, mode, operation):
    command = operation.value | mode.value

    if self._serial is None:
      print("serial command:", hex(command))
    else:
      self._serial.write(bytes([cmd]))

  def __enter__(self):
    #self._serial = serial.Serial(serialPort, baudRate)
    return self
    
  def __exit__(self, type, value, traceback):
    if self._serial is None:
      print("serial closed")
    else:    
      self._serial.close()

app = Flask(__name__)
app.secret_key = 's3cr3t'
app.config['SESSION_TYPE'] = 'filesystem'

print("RED", int(AlarmMode.RED.value))
@app.route('/alarm', methods=['POST'])
def alarm():
  melody = [0.5, 0.5, 0.5, 0.5, 1, 0.5, 0.5, 1] 
  print("ALARM")
  with Alarm(serial = serial) as alarm:
    for duration in melody:
      alarm.sendCommand(AlarmMode.BUZZER, AlarmOperation.ON)
      time.sleep(duration)
      alarm.sendCommand(AlarmMode.BUZZER, AlarmOperation.OFF)
      time.sleep(0.1)  
  return "BUZZ"


if __name__ == '__main__':
  app.run(host='0.0.0.0')

